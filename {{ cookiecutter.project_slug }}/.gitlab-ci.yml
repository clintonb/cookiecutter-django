image: docker:latest

services:
  - docker:dind

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - apk add --no-cache build-base git libffi-dev make openssl-dev py-pip python python-dev
  - pip install docker-compose
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker version
  - docker-compose version

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - docker-compose pull app
    - make docker.build
    - docker tag $CONTAINER_RELEASE_IMAGE $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_TEST_IMAGE

test:
  stage: test
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run app "make quality"
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run app "./wait-for-it.sh db:5432 -- make detect_missing_migrations"
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run app "./wait-for-it.sh db:5432 -- make migrate"
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run app "./wait-for-it.sh db:5432 -- make static"
    - docker-compose -f docker-compose.yml -f docker-compose.ci.yml run app "./wait-for-it.sh db:5432 -- make test"

push_image:
  stage: deploy
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
